# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nstp.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\nnstp.proto\"\xbd\x01\n\x0bNSTPMessage\x12$\n\x0c\x63lient_hello\x18\x01 \x01(\x0b\x32\x0c.ClientHelloH\x00\x12$\n\x0cserver_hello\x18\x02 \x01(\x0b\x32\x0c.ServerHelloH\x00\x12&\n\rerror_message\x18\x03 \x01(\x0b\x32\r.ErrorMessageH\x00\x12.\n\x11\x65ncrypted_message\x18\x04 \x01(\x0b\x32\x11.EncryptedMessageH\x00\x42\n\n\x08message_\"\xaa\x01\n\x0b\x43lientHello\x12\x15\n\rmajor_version\x18\x01 \x01(\r\x12\x15\n\rminor_version\x18\x02 \x01(\r\x12\x12\n\nuser_agent\x18\x03 \x01(\t\x12!\n\x0b\x63\x65rtificate\x18\x04 \x01(\x0b\x32\x0c.Certificate\x12\x36\n\x12\x63\x65rtificate_status\x18\x05 \x01(\x0b\x32\x1a.CertificateStatusResponse\"\xaa\x01\n\x0bServerHello\x12\x15\n\rmajor_version\x18\x01 \x01(\r\x12\x15\n\rminor_version\x18\x02 \x01(\r\x12\x12\n\nuser_agent\x18\x03 \x01(\t\x12!\n\x0b\x63\x65rtificate\x18\x04 \x01(\x0b\x32\x0c.Certificate\x12\x36\n\x12\x63\x65rtificate_status\x18\x05 \x01(\x0b\x32\x1a.CertificateStatusResponse\"%\n\x0c\x45rrorMessage\x12\x15\n\rerror_message\x18\x01 \x01(\t\"C\n\x0bPingRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12&\n\x0ehash_algorithm\x18\x02 \x01(\x0e\x32\x0e.HashAlgorithm\"\x1c\n\x0cPingResponse\x12\x0c\n\x04hash\x18\x01 \x01(\x0c\"*\n\x0bLoadRequest\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x0e\n\x06public\x18\x02 \x01(\x08\"\x1d\n\x0cLoadResponse\x12\r\n\x05value\x18\x01 \x01(\x0c\":\n\x0cStoreRequest\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c\x12\x0e\n\x06public\x18\x03 \x01(\x08\"E\n\rStoreResponse\x12\x0c\n\x04hash\x18\x01 \x01(\x0c\x12&\n\x0ehash_algorithm\x18\x02 \x01(\x0e\x32\x0e.HashAlgorithm\"5\n\x10\x45ncryptedMessage\x12\x12\n\nciphertext\x18\x01 \x01(\x0c\x12\r\n\x05nonce\x18\x02 \x01(\x0c\"\xb4\x02\n\x10\x44\x65\x63ryptedMessage\x12&\n\rerror_message\x18\x01 \x01(\x0b\x32\r.ErrorMessageH\x00\x12$\n\x0cping_request\x18\x02 \x01(\x0b\x32\x0c.PingRequestH\x00\x12&\n\rping_response\x18\x03 \x01(\x0b\x32\r.PingResponseH\x00\x12$\n\x0cload_request\x18\x04 \x01(\x0b\x32\x0c.LoadRequestH\x00\x12&\n\rload_response\x18\x05 \x01(\x0b\x32\r.LoadResponseH\x00\x12&\n\rstore_request\x18\x06 \x01(\x0b\x32\r.StoreRequestH\x00\x12(\n\x0estore_response\x18\x07 \x01(\x0b\x32\x0e.StoreResponseH\x00\x42\n\n\x08message_\"6\n\x10\x43\x65rtificateStore\x12\"\n\x0c\x63\x65rtificates\x18\x01 \x03(\x0b\x32\x0c.Certificate\"\xe3\x01\n\x0b\x43\x65rtificate\x12\x10\n\x08subjects\x18\x01 \x03(\t\x12\x12\n\nvalid_from\x18\x02 \x01(\x04\x12\x14\n\x0cvalid_length\x18\x03 \x01(\r\x12!\n\x06usages\x18\x04 \x03(\x0e\x32\x11.CertificateUsage\x12\x1d\n\x15\x65ncryption_public_key\x18\x05 \x01(\x0c\x12\x1a\n\x12signing_public_key\x18\x06 \x01(\x0c\x12 \n\x06issuer\x18\x07 \x01(\x0b\x32\x10.CertificateHash\x12\x18\n\x10issuer_signature\x18\x08 \x01(\x0c\"C\n\x0f\x43\x65rtificateHash\x12\r\n\x05value\x18\x01 \x01(\x0c\x12!\n\talgorithm\x18\x02 \x01(\x0e\x32\x0e.HashAlgorithm\"p\n\nPrivateKey\x12%\n\x0b\x63\x65rtificate\x18\x01 \x01(\x0b\x32\x10.CertificateHash\x12\x1e\n\x16\x65ncryption_private_key\x18\x02 \x01(\x0c\x12\x1b\n\x13signing_private_key\x18\x03 \x01(\x0c\"A\n\x18\x43\x65rtificateStatusRequest\x12%\n\x0b\x63\x65rtificate\x18\x01 \x01(\x0b\x32\x10.CertificateHash\"\xd4\x01\n\x19\x43\x65rtificateStatusResponse\x12%\n\x0b\x63\x65rtificate\x18\x01 \x01(\x0b\x32\x10.CertificateHash\x12\"\n\x06status\x18\x02 \x01(\x0e\x32\x12.CertificateStatus\x12\x12\n\nvalid_from\x18\x03 \x01(\x04\x12\x14\n\x0cvalid_length\x18\x04 \x01(\r\x12(\n\x12status_certificate\x18\x05 \x01(\x0b\x32\x0c.Certificate\x12\x18\n\x10status_signature\x18\x06 \x01(\x0c\"I\n\x16PinnedCertificateStore\x12/\n\x13pinned_certificates\x18\x01 \x03(\x0b\x32\x12.PinnedCertificate\"K\n\x11PinnedCertificate\x12\x0f\n\x07subject\x18\x01 \x01(\t\x12%\n\x0b\x63\x65rtificate\x18\x02 \x01(\x0b\x32\x10.CertificateHash*5\n\rHashAlgorithm\x12\x0c\n\x08IDENTITY\x10\x00\x12\n\n\x06SHA256\x10\x01\x12\n\n\x06SHA512\x10\x02*u\n\x10\x43\x65rtificateUsage\x12\x17\n\x13\x43\x45RTIFICATE_SIGNING\x10\x00\x12\x19\n\x15\x43LIENT_AUTHENTICATION\x10\x01\x12\x19\n\x15SERVER_AUTHENTICATION\x10\x02\x12\x12\n\x0eSTATUS_SIGNING\x10\x03*8\n\x11\x43\x65rtificateStatus\x12\x0b\n\x07UNKNOWN\x10\x00\x12\t\n\x05VALID\x10\x01\x12\x0b\n\x07REVOKED\x10\x02\x62\x06proto3')

_HASHALGORITHM = DESCRIPTOR.enum_types_by_name['HashAlgorithm']
HashAlgorithm = enum_type_wrapper.EnumTypeWrapper(_HASHALGORITHM)
_CERTIFICATEUSAGE = DESCRIPTOR.enum_types_by_name['CertificateUsage']
CertificateUsage = enum_type_wrapper.EnumTypeWrapper(_CERTIFICATEUSAGE)
_CERTIFICATESTATUS = DESCRIPTOR.enum_types_by_name['CertificateStatus']
CertificateStatus = enum_type_wrapper.EnumTypeWrapper(_CERTIFICATESTATUS)
IDENTITY = 0
SHA256 = 1
SHA512 = 2
CERTIFICATE_SIGNING = 0
CLIENT_AUTHENTICATION = 1
SERVER_AUTHENTICATION = 2
STATUS_SIGNING = 3
UNKNOWN = 0
VALID = 1
REVOKED = 2


_NSTPMESSAGE = DESCRIPTOR.message_types_by_name['NSTPMessage']
_CLIENTHELLO = DESCRIPTOR.message_types_by_name['ClientHello']
_SERVERHELLO = DESCRIPTOR.message_types_by_name['ServerHello']
_ERRORMESSAGE = DESCRIPTOR.message_types_by_name['ErrorMessage']
_PINGREQUEST = DESCRIPTOR.message_types_by_name['PingRequest']
_PINGRESPONSE = DESCRIPTOR.message_types_by_name['PingResponse']
_LOADREQUEST = DESCRIPTOR.message_types_by_name['LoadRequest']
_LOADRESPONSE = DESCRIPTOR.message_types_by_name['LoadResponse']
_STOREREQUEST = DESCRIPTOR.message_types_by_name['StoreRequest']
_STORERESPONSE = DESCRIPTOR.message_types_by_name['StoreResponse']
_ENCRYPTEDMESSAGE = DESCRIPTOR.message_types_by_name['EncryptedMessage']
_DECRYPTEDMESSAGE = DESCRIPTOR.message_types_by_name['DecryptedMessage']
_CERTIFICATESTORE = DESCRIPTOR.message_types_by_name['CertificateStore']
_CERTIFICATE = DESCRIPTOR.message_types_by_name['Certificate']
_CERTIFICATEHASH = DESCRIPTOR.message_types_by_name['CertificateHash']
_PRIVATEKEY = DESCRIPTOR.message_types_by_name['PrivateKey']
_CERTIFICATESTATUSREQUEST = DESCRIPTOR.message_types_by_name['CertificateStatusRequest']
_CERTIFICATESTATUSRESPONSE = DESCRIPTOR.message_types_by_name['CertificateStatusResponse']
_PINNEDCERTIFICATESTORE = DESCRIPTOR.message_types_by_name['PinnedCertificateStore']
_PINNEDCERTIFICATE = DESCRIPTOR.message_types_by_name['PinnedCertificate']
NSTPMessage = _reflection.GeneratedProtocolMessageType('NSTPMessage', (_message.Message,), {
  'DESCRIPTOR' : _NSTPMESSAGE,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:NSTPMessage)
  })
_sym_db.RegisterMessage(NSTPMessage)

ClientHello = _reflection.GeneratedProtocolMessageType('ClientHello', (_message.Message,), {
  'DESCRIPTOR' : _CLIENTHELLO,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:ClientHello)
  })
_sym_db.RegisterMessage(ClientHello)

ServerHello = _reflection.GeneratedProtocolMessageType('ServerHello', (_message.Message,), {
  'DESCRIPTOR' : _SERVERHELLO,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:ServerHello)
  })
_sym_db.RegisterMessage(ServerHello)

ErrorMessage = _reflection.GeneratedProtocolMessageType('ErrorMessage', (_message.Message,), {
  'DESCRIPTOR' : _ERRORMESSAGE,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:ErrorMessage)
  })
_sym_db.RegisterMessage(ErrorMessage)

PingRequest = _reflection.GeneratedProtocolMessageType('PingRequest', (_message.Message,), {
  'DESCRIPTOR' : _PINGREQUEST,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:PingRequest)
  })
_sym_db.RegisterMessage(PingRequest)

PingResponse = _reflection.GeneratedProtocolMessageType('PingResponse', (_message.Message,), {
  'DESCRIPTOR' : _PINGRESPONSE,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:PingResponse)
  })
_sym_db.RegisterMessage(PingResponse)

LoadRequest = _reflection.GeneratedProtocolMessageType('LoadRequest', (_message.Message,), {
  'DESCRIPTOR' : _LOADREQUEST,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:LoadRequest)
  })
_sym_db.RegisterMessage(LoadRequest)

LoadResponse = _reflection.GeneratedProtocolMessageType('LoadResponse', (_message.Message,), {
  'DESCRIPTOR' : _LOADRESPONSE,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:LoadResponse)
  })
_sym_db.RegisterMessage(LoadResponse)

StoreRequest = _reflection.GeneratedProtocolMessageType('StoreRequest', (_message.Message,), {
  'DESCRIPTOR' : _STOREREQUEST,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:StoreRequest)
  })
_sym_db.RegisterMessage(StoreRequest)

StoreResponse = _reflection.GeneratedProtocolMessageType('StoreResponse', (_message.Message,), {
  'DESCRIPTOR' : _STORERESPONSE,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:StoreResponse)
  })
_sym_db.RegisterMessage(StoreResponse)

EncryptedMessage = _reflection.GeneratedProtocolMessageType('EncryptedMessage', (_message.Message,), {
  'DESCRIPTOR' : _ENCRYPTEDMESSAGE,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:EncryptedMessage)
  })
_sym_db.RegisterMessage(EncryptedMessage)

DecryptedMessage = _reflection.GeneratedProtocolMessageType('DecryptedMessage', (_message.Message,), {
  'DESCRIPTOR' : _DECRYPTEDMESSAGE,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:DecryptedMessage)
  })
_sym_db.RegisterMessage(DecryptedMessage)

CertificateStore = _reflection.GeneratedProtocolMessageType('CertificateStore', (_message.Message,), {
  'DESCRIPTOR' : _CERTIFICATESTORE,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:CertificateStore)
  })
_sym_db.RegisterMessage(CertificateStore)

Certificate = _reflection.GeneratedProtocolMessageType('Certificate', (_message.Message,), {
  'DESCRIPTOR' : _CERTIFICATE,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:Certificate)
  })
_sym_db.RegisterMessage(Certificate)

CertificateHash = _reflection.GeneratedProtocolMessageType('CertificateHash', (_message.Message,), {
  'DESCRIPTOR' : _CERTIFICATEHASH,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:CertificateHash)
  })
_sym_db.RegisterMessage(CertificateHash)

PrivateKey = _reflection.GeneratedProtocolMessageType('PrivateKey', (_message.Message,), {
  'DESCRIPTOR' : _PRIVATEKEY,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:PrivateKey)
  })
_sym_db.RegisterMessage(PrivateKey)

CertificateStatusRequest = _reflection.GeneratedProtocolMessageType('CertificateStatusRequest', (_message.Message,), {
  'DESCRIPTOR' : _CERTIFICATESTATUSREQUEST,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:CertificateStatusRequest)
  })
_sym_db.RegisterMessage(CertificateStatusRequest)

CertificateStatusResponse = _reflection.GeneratedProtocolMessageType('CertificateStatusResponse', (_message.Message,), {
  'DESCRIPTOR' : _CERTIFICATESTATUSRESPONSE,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:CertificateStatusResponse)
  })
_sym_db.RegisterMessage(CertificateStatusResponse)

PinnedCertificateStore = _reflection.GeneratedProtocolMessageType('PinnedCertificateStore', (_message.Message,), {
  'DESCRIPTOR' : _PINNEDCERTIFICATESTORE,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:PinnedCertificateStore)
  })
_sym_db.RegisterMessage(PinnedCertificateStore)

PinnedCertificate = _reflection.GeneratedProtocolMessageType('PinnedCertificate', (_message.Message,), {
  'DESCRIPTOR' : _PINNEDCERTIFICATE,
  '__module__' : 'nstp_pb2'
  # @@protoc_insertion_point(class_scope:PinnedCertificate)
  })
_sym_db.RegisterMessage(PinnedCertificate)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _HASHALGORITHM._serialized_start=2165
  _HASHALGORITHM._serialized_end=2218
  _CERTIFICATEUSAGE._serialized_start=2220
  _CERTIFICATEUSAGE._serialized_end=2337
  _CERTIFICATESTATUS._serialized_start=2339
  _CERTIFICATESTATUS._serialized_end=2395
  _NSTPMESSAGE._serialized_start=15
  _NSTPMESSAGE._serialized_end=204
  _CLIENTHELLO._serialized_start=207
  _CLIENTHELLO._serialized_end=377
  _SERVERHELLO._serialized_start=380
  _SERVERHELLO._serialized_end=550
  _ERRORMESSAGE._serialized_start=552
  _ERRORMESSAGE._serialized_end=589
  _PINGREQUEST._serialized_start=591
  _PINGREQUEST._serialized_end=658
  _PINGRESPONSE._serialized_start=660
  _PINGRESPONSE._serialized_end=688
  _LOADREQUEST._serialized_start=690
  _LOADREQUEST._serialized_end=732
  _LOADRESPONSE._serialized_start=734
  _LOADRESPONSE._serialized_end=763
  _STOREREQUEST._serialized_start=765
  _STOREREQUEST._serialized_end=823
  _STORERESPONSE._serialized_start=825
  _STORERESPONSE._serialized_end=894
  _ENCRYPTEDMESSAGE._serialized_start=896
  _ENCRYPTEDMESSAGE._serialized_end=949
  _DECRYPTEDMESSAGE._serialized_start=952
  _DECRYPTEDMESSAGE._serialized_end=1260
  _CERTIFICATESTORE._serialized_start=1262
  _CERTIFICATESTORE._serialized_end=1316
  _CERTIFICATE._serialized_start=1319
  _CERTIFICATE._serialized_end=1546
  _CERTIFICATEHASH._serialized_start=1548
  _CERTIFICATEHASH._serialized_end=1615
  _PRIVATEKEY._serialized_start=1617
  _PRIVATEKEY._serialized_end=1729
  _CERTIFICATESTATUSREQUEST._serialized_start=1731
  _CERTIFICATESTATUSREQUEST._serialized_end=1796
  _CERTIFICATESTATUSRESPONSE._serialized_start=1799
  _CERTIFICATESTATUSRESPONSE._serialized_end=2011
  _PINNEDCERTIFICATESTORE._serialized_start=2013
  _PINNEDCERTIFICATESTORE._serialized_end=2086
  _PINNEDCERTIFICATE._serialized_start=2088
  _PINNEDCERTIFICATE._serialized_end=2163
# @@protoc_insertion_point(module_scope)
